Given two 0-indexed integer arrays nums1 and nums2, return a list answer of size 2 where:
answer[0] is a list of all distinct integers in nums1 which are not present in nums2.
answer[1] is a list of all distinct integers in nums2 which are not present in nums1.
Note that the integers in the lists may be returned in any order.



class Solution {
    public List<List<Integer>> findDifference(int[] nums1, int[] nums2) {
        Set<Integer> set1 = new HashSet<Integer>();
        Set<Integer> set2 = new HashSet<Integer>();
        Set<Integer> cross = new HashSet<Integer>();
        for (int i : nums1){
            set1.add(i);
        }
        for (int i : nums2){
            if (set1.contains(i)){
                cross.add(i);
            }
            else {
                set2.add(i);
            }
        }
        
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> l = new ArrayList<>(set1);
        l.removeAll(cross);
        ans.add(l);
        ans.add(new ArrayList<Integer>(set2));
        return ans;
    }
}
